import random

class Sigma:
    def __init__(self):
        self.hp = 100
        self.maxhp = 100
        self.atak = 10
        self.zyje = True
        self.imie = "Sigma"
        self.stamina = 100
        self.maxstamina = 115
        self.doswiadczenie = 0
        self.ekwipunek_p = {
            "p_zycia(1)": 1, "p_stamina(2)": 0, "p_teleportacji(3)": 0,
            "p_smierci(4)": 0, "p_many(5)": 0, "bomba(6)": 0,
            "shuriken(7)": 0, "opetana_kaczka(8)": 0
        }
        self.ekwipunek_z = {
            "kroplomiecz": 0, "srebrolisc": 0, "ciernolisc": 0, "duszoblysk": 0,
            "jasnorost": 0, "gniewnica": 0, "nocznica": 0,
            "nerka_goblina": 0, "pyl_duszy": 0, "ciecz_liszaj": 0,
            "sok_zylorosl": 0, "kosc_wrozki": 0, "jad_skrystalizowany": 0,
            "stal": 0, "drewno": 0, "skora": 0, "zelazo": 0,
            "krysztal_many": 0, "esencja_cienia": 0, "pyl_feniksa": 0,
        }
        self.ekwipunek_zb = {
            "miecz": 0, "topor": 0, "luk": 0,
            "zbroja_skorzana": 0, "zbroja_stalowa": 0, "zbroja_plytowa": 0,
            "rozdzka_ognia": 0, "amulet_cieni": 0, "pierscien_odrodzenia": 0,
        }
        self.saldo = 1000000
        self.poziom = 0
        self.wymagany_poziom = 100
        self.magiczne_ataki = []
        self.mana = 100
        self.maxmana = 150
        self.lokacja = M_eldenhof()
        self.status_effects = []
    
    def podejrzliwe(self,pol):
        print("znajdujesz podejrzango grzybka i go jesz dostajesz efekt")
        pol = random.choice([1,2])
        if pol == 1:
            s.status_effects.append(StatusEffect("Zatrucie", duration=3, apply_effect=StatusEffect.poison(s)))
        elif pol == 2:
            s.status_effects.append(StatusEffect("Zatrucie", duration=3, apply_effect=StatusEffect.buff_attack(s)))
    
    def dodawanie_efektow(self):
        for effect in self.status_effects[:]:
            effect.trigger(self)
            if effect.is_expired():
                print(f"Efekt {effect.name} wygasł.")
            self.status_effects.remove(effect)
    def lokacja_p(self):
        return self.lokacja.nazwa
    
    def items(self):
        kl = {"p_reka": 0, "l_reka": 0, "zbroja": 0}
        pk = input("Podaj co chcesz założyć, 1 - miecz, 2 - topór, 3 - łuk, 4 - zbroja: ")
        print(self.ekwipunek_zb)
        if pk == 1:
            print("Możesz tu założyć miecz")
            if self.ekwipunek_zb.get("miecz", 0) >= 1:
                print("Na która ręke chcesz założyć, 1 - prawa, 2 - lewa")
                kkk = input(">> ")
                if kkk == 1 and kl("p_reka",0)<1:
                    kl["p_reka"]+=1
                    self.ekwipunek_zb["miecz"]-=1
                    self.atak+=15
                elif kkk == 2 and kl("l_reka",0)<1:
                    kl["l_reka"]+=1
                    self.ekwipunek_zb["miecz"]-=1
                    self.atak+=15
        elif pk == 2:
            print("Możesz tu założyć topór")
            if self.ekwipunek_zb.get("miecz", 0) >= 1:
                print("Na która ręke chcesz założyć, 1 - prawa, 2 - lewa")
                kkk = input(">> ")
                if kkk == 1 and kl("p_reka",0)<1:
                    kl["p_reka"]+=1
                    self.ekwipunek_zb["topor"]-=1
                    self.atak+=25
                    self.hp-=15
                elif kkk == 2 and kl("l_reka",0)<1:
                    kl["l_reka"]+=1
                    self.ekwipunek_zb["topor"]-=1
                    self.atak+=25
                    self.hp-=15
        elif pk == 3:
            print("Możesz tu założyć łuk")
            if self.ekwipunek_zb.get("luk", 0) >= 1:
                print("Na która ręke chcesz założyć, 1 - prawa, 2 - lewa")
                kkk = input(">> ")
                if kkk == 1 and kl("p_reka",0)<1:
                    kl["p_reka"]+=1
                    self.ekwipunek_zb["luk"]-=1
                    self.atak+=10
                    self.hp+=5
                elif kkk == 2 and kl("l_reka",0)<1:
                    kl["l_reka"]+=1
                    self.ekwipunek_zb["luk"]-=1
                    self.atak+=10
                    self.hp+=5
        elif pk == 4:
            print("możesz założyć tu zbroje")
            if self.ekwipunek_zb("zbroja_skorzana",0)>=1 or self.ekwipunek_zb("zbroja_stalowa")>=1 or self.ekwipunek_zb("zbroja_plytowa")>=1:
                if kl("zbroja")<1:
                    print("którą zbroję chcesz założyć, 1 - skórzana, 2 - stalowa, 3 - płytowa")
                    kolo = input()
                    if kolo == 1 and self.ekwipunek_zb["zbroja_skorzana"]>=1:
                        kl["zbroja"]+=1
                        self.ekwipunek_zb["zbroja_skorzana"]-=1
                        self.hp+=25
                    elif kolo == 2 and self.ekwipunek_zb["zbroj_stalowa"]>=1:
                        kl["zbroja"]+=1
                        self.ekwipunek_zb["zbroj_stalowa"]-=1
                        self.hp+=40
                    elif kolo == 3 and self.ekwipunek_zb["zbroj_plytowa"]>=1:
                        kl["zbroja"]+=1
                        self.ekwipunek_zb["zbroj_plytowa"]-=1
                        self.hp+=70
                    

    def levelowanie(self):
        if self.doswiadczenie >= self.wymagany_poziom:
            print(f"zdobyłeś nowy POZIOM !!!!!!!! to twój {self.poziom} poziom")
            self.poziom += 1
            self.wymagany_poziom *= 2  
            self.maxhp += 5
            self.maxstamina += 10

    def staty(self):
        return (f"hp = {self.hp}, max hp = {self.maxhp}, atak = {self.atak}, imie = {self.imie}, "
                f"stamina = {self.stamina}, max stamina = {self.maxstamina}, doswiadczenie = {self.doswiadczenie}, saldo = {self.saldo}")

    def uzywanie_potek(self):
        print("Aby użyć wybranej potki wpisz numer znajdujący się obok niej")
        print(self.ekwipunek_p)
        ppp = int(input(">> "))
        if ppp == 1 and self.ekwipunek_p.get("p_zycia(1)", 0) >= 1:
            if self.hp == self.maxhp:
                print("Masz już pełne życie, nie możesz dodać więcej hp")
                return
            self.ekwipunek_p["p_zycia(1)"] -= 1
            self.hp += 25
            if self.hp > self.maxhp:
                self.hp = self.maxhp
            print(f"Życie Sigmy wynosi {self.hp} / {self.maxhp}")

        elif ppp == 2 and self.ekwipunek_p.get("p_stamina(2)", 0) >= 1:
            if self.stamina == self.maxstamina:
                print("Masz już pełną staminę, nie możesz dodać więcej staminy")
                return
            self.ekwipunek_p["p_stamina(2)"] -= 1
            self.stamina += 35
            if self.stamina > self.maxstamina:
                self.stamina = self.maxstamina
            print(f"Stamina Sigmy wynosi {self.stamina} / {self.maxstamina}")

        elif ppp == 3 and self.ekwipunek_p.get("p_teleportacji(3)", 0) >= 1:
            print("Dostępna mapa:")
            print("wpisz 2 pierwsze litery lokacji gdzie chcesz się przeteleporotwać")
            print(mapa())  
            kl = input("Wybierz swoje kordynaty: ").lower()
            if kl == "el":
                self.lokacja = M_eldenhof()
                print("Teleportacja do Eldenhof zakończona sukcesem.")
            elif kl == "fa":
                self.lokacja = M_farglen(M_eldenhof)
            elif kl == "oa":
                self.lokacja

    def odejmij_hp(self, a):
        self.hp -= a
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False
            print(f"{self.imie} zginął!")

    def czy_zyje(self):
        return self.zyje

    def specjalny_atak(self, target):
        obrazenia = random.randint(15, 25)
        print(f"{self.imie} wykonuje specjalny atak! Zadaje {obrazenia} obrażeń.")
        target.odejmij_hp(obrazenia)

    def zdobycie_doswiadczenia(self, ilosc):
        self.doswiadczenie += ilosc
        print(f"{self.imie} zdobył {ilosc} punktów doświadczenia. Aktualne doświadczenie: {self.doswiadczenie}.")

    def atak_s(self, target):
        damage = self.atak
        print(f"{self.imie} atakuje! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)
        if self.stamina < self.maxstamina:
            self.stamina += 5
            print(f"Stamina wynosi {self.stamina} na {self.maxstamina}. HP wynosi {self.hp} na {self.maxhp}")

    def zbierz_loot(self, loot_przedmioty, zloto):
        print(f"Zdobywasz następujące przedmioty:")
        for przedmiot, ilosc in loot_przedmioty.items():
            print(f"- {przedmiot}: {ilosc}")
            if przedmiot in self.ekwipunek_z:
                self.ekwipunek_z[przedmiot] += ilosc
            else:
                self.ekwipunek_z[przedmiot] = ilosc
        self.saldo += zloto


class StatusEffect:
    def __init__(self, name, duration, apply_effect):
        self.name = name
        self.duration = duration
        self.apply_effect = apply_effect 


    def trigger(self, target):
        self.apply_effect(target)
        self.duration -= 1

    def is_expired(self):
        return self.duration <= 0

    def poison(target):
        print(f"{s.imie} traci 5 HP z powodu zatrucia!")
        s.odejmij_hp(5)

    def buff_attack(target):
        print(f"{s.imie} zyskuje +10 do ataku!")
        s.atak += 10


class M_eldenhof:
    def __init__(self):
        self.nazwa = "Eldenhof"
        self.opis = "Stare miasto handlowe z silnymi murami i wielkim targiem."
        self.populacja = 1200
        self.sklepy = ["alchemik", "kowal"]
        self.zadania = []

    def pokaz_info(self):
        print(f"=== {self.nazwa.upper()} ===")
        print(f"Opis: {self.opis}")
        print(f"Populacja: {self.populacja}")
        print(f"Dostępne sklepy: {', '.join(self.sklepy)}")

    def alchemik(self):
        print("Witaj podróżniku, co cię tu sprowadza?")
        print("Pewnie chciałbyś kupić jakieś eliksiry lub składniki do nich, lub móc stworzyć eliksir tu i teraz pod moim czujnym okiem.")
        print("Lepiej nie mogłeś trafić! Tylko tu możesz kupić nerkę goblina oraz zioła z głębin podziemi!")
        pkp = int(input("Wpisz 1 aby kupić potki, 2 aby kupić zioła, 3 aby scraftować potkę, 4 aby zobaczyć regionalne produkty: "))
        
        if pkp == 1:
            print("ACH, mamy ogromny wybór potek od tych życiodajnych po te bardziej tajemnicze :>.")
            print("Aby kupić p_życia kliknij a, p_staminy b, p_ucieczki c, p_teleportacji d, p_śmierci e")
            kp = input().lower()
            if kp == "a" and s.saldo >= 200:
                ile = int(input("Ile chcesz kupić potek życia? "))
                koszt = 200 * ile
                if s.saldo >= koszt:
                    s.saldo -= koszt
                    s.ekwipunek_p["p_zycia(1)"] += ile
                else:
                    print("Nie masz wystarczająco złota.")
            elif kp == "b" and s.saldo >= 150:
                ile = int(input("Ile chcesz kupić potek staminy? "))
                koszt = 150 * ile
                if s.saldo >= koszt:
                    s.saldo -= koszt
                    s.ekwipunek_p["p_stamina(2)"] += ile
                else:
                    print("Nie masz wystarczająco złota.")
            elif kp == "c":
                print("Opcja potek ucieczki nie zaimplementowana.")
            elif kp == "d" and s.saldo >= 400:
                ile = int(input("Ile chcesz kupić potek teleportacji? "))
                koszt = 400 * ile
                if s.saldo >= koszt:
                    s.saldo -= koszt
                    s.ekwipunek_p["p_teleportacji(3)"] += ile
                else:
                    print("Nie masz wystarczająco złota.")
            elif kp == "e" and s.saldo >= 600:
                ile = int(input("Ile chcesz kupić potek śmierci? "))
                koszt = 600 * ile
                if s.saldo >= koszt:
                    s.saldo -= koszt
                    s.ekwipunek_p["p_smierci(4)"] += ile
                else:
                    print("Nie masz wystarczająco złota.")
            else:
                print("Niepoprawny wybór lub brak środków.")

        elif pkp == 2:
            print("Więc chcesz kupić zioła, oto nasz asortyment a może chcesz sprzedac zioła jak tak to klikinij s, jeśli nie to klikinij k:")
            pop = input()
            if pop == "k":
                print("a - kroplomiecz (30), b - srebroliść (55), c - ciernoliść (45), d - duszobłysk (85), e - jasnorost (55), f - gniewnica (100), g - nocznica (85)")
                plp = input().lower()
                if wybor == "a" and s.saldo >= 30:
                    ile = int(input("Ile nerek goblina chcesz kupić? "))
                    if ile * 40 <= s.saldo:
                        s.saldo -= 40 * ile
                        s.ekwipunek_z["kroplomiecz"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "b" and s.saldo >= 55:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["srebrolisc"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "c" and s.saldo >= 45:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["ciernolisc"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "d" and s.saldo >= 85:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["duszoblysk"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "e" and s.saldo >= 55:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["jasnorost"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "f" and s.saldo >= 100:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["gniewnica"] += ile
                    else:
                        print("Nie stać Cię na to :(")
                
                elif wybor == "g" and s.saldo >= 85:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["nocznica"] += ile
                    else:
                        print("Nie stać Cię na to :(")

            elif pop == "s":
                print("Co chcesz sprzedać?")
                print("a - kroplomiecz (sprzedaż: 21), b - srebroliść (sprzedaż: 38), c - ciernoliść (sprzedaż: 31),")
                print("d - duszobłysk (sprzedaż: 59), e - jasnorost (sprzedaż: 38), f - gniewnica (sprzedaż: 70), g - nocznica (sprzedaż: 59)")
                
                wybor = input("Wybierz przedmiot do sprzedaży (a-g): ").lower()
                
                if wybor == "a" and s.ekwipunek_z.get("kroplomiecz", 0) > 0:
                    ile = int(input("Ile kroplomieczy chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["kroplomiecz"]:
                        s.ekwipunek_z["kroplomiecz"] -= ile
                        s.saldo += 21 * ile
                        print(f"Sprzedałeś {ile}x kroplomiecz za {21 * ile} złota.")
                    else:
                        print("Nie masz tylu kroplomieczy!")

                elif wybor == "b" and s.ekwipunek_z.get("srebrolisc", 0) > 0:
                    ile = int(input("Ile srebrolistów chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["srebrolisc"]:
                        s.ekwipunek_z["srebrolisc"] -= ile
                        s.saldo += 38 * ile
                        print(f"Sprzedałeś {ile}x srebrolist za {38 * ile} złota.")
                    else:
                        print("Nie masz tylu srebrolistów!")

                elif wybor == "c" and s.ekwipunek_z.get("ciernolisc", 0) > 0:
                    ile = int(input("Ile ciernolistów chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["ciernolisc"]:
                        s.ekwipunek_z["ciernolisc"] -= ile
                        s.saldo += 31 * ile
                        print(f"Sprzedałeś {ile}x ciernolisc za {31 * ile} złota.")
                    else:
                        print("Nie masz tylu ciernolistów!")

                elif wybor == "d" and s.ekwipunek_z.get("duszoblysk", 0) > 0:
                    ile = int(input("Ile duszobłysków chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["duszoblysk"]:
                        s.ekwipunek_z["duszoblysk"] -= ile
                        s.saldo += 59 * ile
                        print(f"Sprzedałeś {ile}x duszobłysk za {59 * ile} złota.")
                    else:
                        print("Nie masz tylu duszobłysków!")

                elif wybor == "e" and s.ekwipunek_z.get("jasnorost", 0) > 0:
                    ile = int(input("Ile jasnorostów chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["jasnorost"]:
                        s.ekwipunek_z["jasnorost"] -= ile
                        s.saldo += 38 * ile
                        print(f"Sprzedałeś {ile}x jasnorost za {38 * ile} złota.")
                    else:
                        print("Nie masz tylu jasnorostów!")

                elif wybor == "f" and s.ekwipunek_z.get("gniewnica", 0) > 0:
                    ile = int(input("Ile gniewnic chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["gniewnica"]:
                        s.ekwipunek_z["gniewnica"] -= ile
                        s.saldo += 70 * ile
                        print(f"Sprzedałeś {ile}x gniewnica za {70 * ile} złota.")
                    else:
                        print("Nie masz tylu gniewnic!")

                elif wybor == "g" and s.ekwipunek_z.get("nocznica", 0) > 0:
                    ile = int(input("Ile nocznic chcesz sprzedać? "))
                    if ile <= s.ekwipunek_z["nocznica"]:
                        s.ekwipunek_z["nocznica"] -= ile
                        s.saldo += 59 * ile
                        print(f"Sprzedałeś {ile}x nocznica za {59 * ile} złota.")
                    else:
                        print("Nie masz tylu nocznic!")

                else:
                    print("Nie masz tego przedmiotu lub wybrałeś błędnie.")
        elif pkp == 4:
            print("Witaj w alchemicznym sklepie Endelhof! Oto nasze lokalne produkty a może chcesz je sprzedac jak tak to kliknij s jeśli nie to kliknij k:")
            popy = input()
            if popy == "k":
                print("Wybierz: a - nerka goblina (40), b - pył duszy (70), c - ciecz z liszaja (55),d - sok z żyłorośli (90), e - kość wróżki (120), f - skrystalizowany jad (80)")

                wybor = input().lower()

                if wybor == "a" and s.saldo >= 40:
                    ile = int(input("Ile nerek goblina chcesz kupić? "))
                    if ile * 40 <= s.saldo:
                        s.saldo -= 40 * ile
                        s.ekwipunek_z["nerka_goblina"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                elif wybor == "b" and s.saldo >= 70:
                    ile = int(input("Ile porcji pyłu duszy chcesz kupić? "))
                    if ile * 70 <= s.saldo:
                        s.saldo -= 70 * ile
                        s.ekwipunek_z["pyl_duszy"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                elif wybor == "c" and s.saldo >= 55:
                    ile = int(input("Ile jednostek cieczy z liszaja chcesz kupić? "))
                    if ile * 55 <= s.saldo:
                        s.saldo -= 55 * ile
                        s.ekwipunek_z["ciecz_liszaj"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                elif wybor == "d" and s.saldo >= 90:
                    ile = int(input("Ile butelek soku z żyłorośli chcesz kupić? "))
                    if ile * 90 <= s.saldo:
                        s.saldo -= 90 * ile
                        s.ekwipunek_z["sok_zylorosl"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                elif wybor == "e" and s.saldo >= 120:
                    ile = int(input("Ile kości wróżki chcesz kupić? "))
                    if ile * 120 <= s.saldo:
                        s.saldo -= 120 * ile
                        s.ekwipunek_z["kosc_wrozki"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                elif wybor == "f" and s.saldo >= 80:
                    ile = int(input("Ile jednostek skrystalizowanego jadu chcesz kupić? "))
                    if ile * 80 <= s.saldo:
                        s.saldo -= 80 * ile
                        s.ekwipunek_z["jad_skrystalizowany"] += ile
                    else:
                        print("Nie stać Cię na to :(")

                else:
                    print("Niepoprawny wybór lub za mało złota.")
            elif popy == "s":
                    print("Co chcesz sprzedać?")
                    print("a - nerka goblina (sprzedaż: 28), b - pył duszy (sprzedaż: 49), c - ciecz z liszaja (sprzedaż: 38),")
                    print("d - sok z żyłorośli (sprzedaż: 63), e - kość wróżki (sprzedaż: 84), f - skrystalizowany jad (sprzedaż: 56)")

                    wybor = input("Wybierz składnik do sprzedaży (a-f): ").lower()

                    if wybor == "a" and s.ekwipunek_z.get("nerka_goblina", 0) > 0:
                        ile = int(input("Ile nerek goblina chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["nerka_goblina"]:
                            s.ekwipunek_z["nerka_goblina"] -= ile
                            s.saldo += 28 * ile
                            print(f"Sprzedałeś {ile}x nerka goblina za {28 * ile} złota.")
                        else:
                            print("Nie masz tylu nerek goblina!")

                    elif wybor == "b" and s.ekwipunek_z.get("pyl_duszy", 0) > 0:
                        ile = int(input("Ile porcji pyłu duszy chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["pyl_duszy"]:
                            s.ekwipunek_z["pyl_duszy"] -= ile
                            s.saldo += 49 * ile
                            print(f"Sprzedałeś {ile}x pył duszy za {49 * ile} złota.")
                        else:
                            print("Nie masz tylu porcji pyłu duszy!")

                    elif wybor == "c" and s.ekwipunek_z.get("ciecz_liszaj", 0) > 0:
                        ile = int(input("Ile jednostek cieczy z liszaja chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["ciecz_liszaj"]:
                            s.ekwipunek_z["ciecz_liszaj"] -= ile
                            s.saldo += 38 * ile
                            print(f"Sprzedałeś {ile}x ciecz z liszaja za {38 * ile} złota.")
                        else:
                            print("Nie masz tylu jednostek cieczy!")

                    elif wybor == "d" and s.ekwipunek_z.get("sok_zylorosl", 0) > 0:
                        ile = int(input("Ile butelek soku z żyłorośli chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["sok_zylorosl"]:
                            s.ekwipunek_z["sok_zylorosl"] -= ile
                            s.saldo += 63 * ile
                            print(f"Sprzedałeś {ile}x sok z żyłorośli za {63 * ile} złota.")
                        else:
                            print("Nie masz tylu butelek!")

                    elif wybor == "e" and s.ekwipunek_z.get("kosc_wrozki", 0) > 0:
                        ile = int(input("Ile kości wróżki chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["kosc_wrozki"]:
                            s.ekwipunek_z["kosc_wrozki"] -= ile
                            s.saldo += 84 * ile
                            print(f"Sprzedałeś {ile}x kość wróżki za {84 * ile} złota.")
                        else:
                            print("Nie masz tylu kości wróżki!")

                    elif wybor == "f" and s.ekwipunek_z.get("jad_skrystalizowany", 0) > 0:
                        ile = int(input("Ile jednostek skrystalizowanego jadu chcesz sprzedać? "))
                        if ile <= s.ekwipunek_z["jad_skrystalizowany"]:
                            s.ekwipunek_z["jad_skrystalizowany"] -= ile
                            s.saldo += 56 * ile
                            print(f"Sprzedałeś {ile}x skrystalizowany jad za {56 * ile} złota.")
                        else:
                            print("Nie masz tylu jednostek jadu!")

                    else:
                        print("Nie masz tego składnika lub podałeś zły wybór.")
        
        if pkp == 3:
            print("Dostępne eliksiry do stworzenia:")
            print("a - Eliksir życia (kroplomiecz + jasnorost)\nb - Eliksir staminy (nocznica + gniewnica)\nc - Eliksir trucizny (ciecz liszaja + jad skrystalizowany)")
            wybor_potki = input("Wybierz eliksir: ").lower()

            receptury = {
                "a": {"nazwa": "p_zycia(1)", "skladniki": {"kroplomiecz": 1, "jasnorost": 1}},
                "b": {"nazwa": "p_stamina(2)", "skladniki": {"nocznica": 1, "gniewnica": 1}},
                "c": {"nazwa": "p_trucizna", "skladniki": {"ciecz_liszaj": 1, "jad_skrystalizowany": 1}}
            }

            if wybor_potki in receptury:
                przepis = receptury[wybor_potki]
                skladniki = przepis["skladniki"]

                if all(s.ekwipunek_z.get(skladnik, 0) >= ilosc for skladnik, ilosc in skladniki.items()):
                    for skladnik, ilosc in skladniki.items():
                        s.ekwipunek_z[skladnik] -= ilosc
                    s.ekwipunek[przepis["nazwa"]] += 1
                    print(f"Udało się stworzyć {przepis['nazwa']}!")
                else:
                    print("Brakuje składników!")
            else:
                print("Nie ma takiego eliksiru.")
    
    def kowal(self):
        print("Witaj podróżniku! Co cię tu sprowadza?")
        print("Pewnie chciałbyś kupić jakieś bronie lub zbroje, lub móc stworzyć coś pod moim czujnym okiem. Lepiej nie mogłeś trafić!")
        pkp = int(input("Wpisz 1 aby kupić broń, 2 aby kupić zbroję, 3 aby stworzyć przedmiot, 4 aby zobaczyć lokalne materiały: "))
        
        if pkp == 1:
            print("ACH, mamy ogromny wybór broni od mieczy po topory.")
            print("Aby kupić miecz kliknij a, aby kupić topór kliknij b, c aby kupić łuk.")
            kp = input().lower()
            if kp == "a" and s.saldo >= 300:
                ile = int(input("Ile chcesz kupić mieczy? "))
                s.saldo -= 300 * ile
                s.ekwipunek["miecz"] += ile
            
            elif kp == "b" and s.saldo >= 400:
                ile = int(input("Ile chcesz kupić toporów? "))
                s.saldo -= 400 * ile
                s.ekwipunek["topor"] += ile
            
            elif kp == "c" and s.saldo >= 250:
                ile = int(input("Ile chcesz kupić łuków? "))
                s.saldo -= 250 * ile
                s.ekwipunek["łuk"] += ile
        
        elif pkp == 2:
            print("Więc chcesz kupić zbroje? Oto nasz asortyment.")
            print("Wybierz a - zbroja skórzana, b - zbroja stalowa, c - zbroja płytowa.")
            plp = input().lower()
            if plp == "a" and s.saldo >= 150:
                pile = int(input("Ile chcesz kupić zbroi skórzanych? "))
                s.saldo -= 150 * pile
                s.ekwipunek["zbroja_skórzana"] += pile
            elif plp == "b" and s.saldo >= 300:
                pile = int(input("Ile chcesz kupić zbroi stalowych? "))
                s.saldo -= 300 * pile
                s.ekwipunek["zbroja_stalowa"] += pile
            elif plp == "c" and s.saldo >= 500:
                pile = int(input("Ile chcesz kupić zbroi płytowych? "))
                s.saldo -= 500 * pile
                s.ekwipunek["zbroja_płytowa"] += pile
        
        elif pkp == 4:
            print("Witaj w kowalni Eldenhof! Oto nasze lokalne materiały:")
            print("Wybierz: a - stal (50), b - drewno (30), c - skóra (20), d - żelazo (40)")

            wybor = input().lower()

            if wybor == "a" and s.saldo >= 50:
                ile = int(input("Ile jednostek stali chcesz kupić? "))
                if ile * 50 <= s.saldo:
                    s.saldo -= 50 * ile
                    s.ekwipunek_z["stal"] += ile
                else:
                    print("Nie stać Cię na to :(")

            elif wybor == "b" and s.saldo >= 30:
                ile = int(input("Ile jednostek drewna chcesz kupić? "))
                if ile * 30 <= s.saldo:
                    s.saldo -= 30 * ile
                    s.ekwipunek_z["drewno"] += ile
                else:
                    print("Nie stać Cię na to :(")

            elif wybor == "c" and s.saldo >= 20:
                ile = int(input("Ile jednostek skóry chcesz kupić? "))
                if ile * 20 <= s.saldo:
                    s.saldo -= 20 * ile
                    s.ekwipunek_z["skóra"] += ile
                else:
                    print("Nie stać Cię na to :(")

            elif wybor == "d" and s.saldo >= 40:
                ile = int(input("Ile jednostek żelaza chcesz kupić? "))
                if ile * 40 <= s.saldo:
                    s.saldo -= 40 * ile
                    s.ekwipunek_z["żelazo"] += ile
                else:
                    print("Nie stać Cię na to :(")

        elif pkp == 3:
            print("Dostępne przedmioty do stworzenia:")
            print("a - Miecz (stal + drewno)\nb - Zbroja (skóra + stal)\nc - Topór (żelazo + drewno)")
            wybor_przedmiotu = input("Wybierz przedmiot: ").lower()

            receptury = {
                "a": {"nazwa": "miecz", "skladniki": {"stal": 1, "drewno": 1}},
                "b": {"nazwa": "zbroja", "skladniki": {"skóra": 2, "stal": 1}},
                "c": {"nazwa": "topór", "skladniki": {"żelazo": 1, "drewno": 1}}
            }

            if wybor_przedmiotu in receptury:
                przepis = receptury[wybor_przedmiotu]
                skladniki = przepis["skladniki"]

                if all(s.ekwipunek_z.get(skladnik, 0) >= ilosc for skladnik, ilosc in skladniki.items()):
                    for skladnik, ilosc in skladniki.items():
                        s.ekwipunek_z[skladnik] -= ilosc
                    s.ekwipunek[przepis["nazwa"]] += 1
                    print(f"Udało się stworzyć {przepis['nazwa']}!")
                else:
                    print("Brakuje składników!")
            else:
                print("Nie ma takiego przedmiotu.")

            wybor = input().lower()

            
    

class M_farglen(M_eldenhof):
    def __init__(self):
        super().__init__()
        self.nazwa = "Eldenhof"
        self.opis = "Dobrze skomunikowane miasto z krasnoludami i innymi miastami."
        self.populacja = 800
        self.sklepy = ["czarny rynek, mag"]
        self.zadania = []
    
    def czarny_rynek():
        print("Witaj w czarnym rynku... Ciszej, nie każdy musi wiedzieć, że tu jesteś.")
        print("Mam tu kilka nietypowych towarów zakazane artefakty, rzadkie składniki, no i oczywiście... broń.")
        pkp = int(input("Wpisz 1 aby kupić zakazaną broń, 2 aby kupić rzadkie składniki, 3 aby stworzyć tajny przedmiot: "))

        if pkp == 1:
            print("Dostępna broń: a - bomba (800), b - shurikeny (700), c - opetana_kaczka (1000)")
            kp = input().lower()
            if kp == "a" and s.saldo >= 800:
                ile = int(input("Ile bomb chcesz kupić? "))
                s.saldo -= 800 * ile
                s.ekwipunek_z["bomba"] += ile
            elif kp == "b" and s.saldo >= 700:
                ile = int(input("Ile shurikenów chcesz kupić? "))
                s.saldo -= 700 * ile
                s.ekwipunek_z["shuriken"] += ile
            elif kp == "c" and s.saldo >= 1000:
                ile = int(input("Ile opentanych kaczek chcesz kupić? "))
                s.saldo -= 1000 * ile
                s.ekwipunek_z["opetana_kaczka"] += ile
            else:
                print("Nie stać Cię albo nieprawidłowy wybór.")

        elif pkp == 2:
            print("Rzadkie składniki: a - Jad skrystalizowany (500), b - Pyl duszy (300), c - Nerka goblina (200)")
            wybor = input().lower()

            if wybor == "a" and s.saldo >= 500:
                ile = int(input("Ile jadu chcesz kupić? "))
                s.saldo -= 500 * ile
                s.ekwipunek_z["jad_skrystalizowany"] += ile
            elif wybor == "b" and s.saldo >= 300:
                ile = int(input("Ile pyłu duszy chcesz kupić? "))
                s.saldo -= 300 * ile
                s.ekwipunek_z["pyl_duszy"] += ile
            elif wybor == "c" and s.saldo >= 200:
                ile = int(input("Ile nerek goblina chcesz kupić? "))
                s.saldo -= 200 * ile
                s.ekwipunek_z["nerka_goblina"] += ile
            else:
                print("Nie masz wystarczająco złota albo zły wybór.")

        elif pkp == 3:
            print("Tajne przedmioty do stworzenia: a - Sztylet Cienia (jad + stal), b - Maska Złodzieja (skóra + pyl duszy)")
            wybor = input("Wybierz przedmiot: ").lower()

            receptury = {
                "a": {"nazwa": "sztylet_cienia", "skladniki": {"jad_skrystalizowany": 1, "stal": 1}},
                "b": {"nazwa": "maska_zlodzieja", "skladniki": {"skóra": 1, "pyl_duszy": 1}}
            }

            if wybor in receptury:
                przepis = receptury[wybor]
                if all(s.ekwipunek_z.get(skladnik, 0) >= ilosc for skladnik, ilosc in przepis["skladniki"].items()):
                    for skladnik, ilosc in przepis["skladniki"].items():
                        s.ekwipunek_z[skladnik] -= ilosc
                    s.ekwipunek_z[przepis["nazwa"]] = s.ekwipunek_z.get(przepis["nazwa"], 0) + 1
                    print(f"Stworzyłeś {przepis['nazwa']}!")
                else:
                    print("Brakuje ci składników.")
            else:
                print("Nieprawidłowy wybór.")

        else:
            print("Nie znam takiej opcji.")
    
    
    def mag():
        print("Witaj, śmiertelniku... Twoja aura jest... intrygująca.")
        print("Czego pragniesz? Wiedzy zaklętej w zwojach? Mistycznych esencji? A może chcesz stworzyć coś wyjątkowego?")
        pkp = int(input("Wpisz 1 aby kupić zaklęcia, 2 aby kupić komponenty magiczne, 3 aby stworzyć magiczny przedmiot: "))

        if pkp == 1:
            print("Dostępne zaklęcia: a - Kula Ognia (500), b - Lodowy Pocisk (400), c - Leczenie (350)")
            kp = input().lower()
            if kp == "a" and s.saldo >= 500:
                ile = int(input("Ile zwojów Kuli Ognia chcesz kupić? "))
                s.saldo -= 500 * ile
                s.ekwipunek_z["kula_ognia"] += ile
            elif kp == "b" and s.saldo >= 400:
                ile = int(input("Ile zwojów Lodowego Pocisku chcesz kupić? "))
                s.saldo -= 400 * ile
                s.ekwipunek_z["lodowy_pocisk"] += ile
            elif kp == "c" and s.saldo >= 350:
                ile = int(input("Ile zwojów Leczenia chcesz kupić? "))
                s.saldo -= 350 * ile
                s.ekwipunek_z["leczenie"] += ile
            else:
                print("Nie stać Cię albo nieprawidłowy wybór.")

        elif pkp == 2:
            print("Komponenty magiczne: a - Kryształ Many (300), b - Esencja Cienia (250), c - Pył Feniksa (600)")
            wybor = input().lower()

            if wybor == "a" and s.saldo >= 300:
                ile = int(input("Ile Kryształów Many chcesz kupić? "))
                s.saldo -= 300 * ile
                s.ekwipunek_z["krysztal_many"] += ile
            elif wybor == "b" and s.saldo >= 250:
                ile = int(input("Ile Esencji Cienia chcesz kupić? "))
                s.saldo -= 250 * ile
                s.ekwipunek_z["esencja_cienia"] += ile
            elif wybor == "c" and s.saldo >= 600:
                ile = int(input("Ile Pyłu Feniksa chcesz kupić? "))
                s.saldo -= 600 * ile
                s.ekwipunek_z["pyl_feniksa"] += ile
            else:
                print("Nie masz wystarczająco złota albo zły wybór.")

        elif pkp == 3:
            print("Dostępne przedmioty magiczne do stworzenia:")
            print("a - Różdżka Ognia (kryształ many + kula ognia)")
            print("b - Amulet Cieni (esencja cienia + lodowy pocisk)")
            print("c - Pierścień Odrodzenia (pył feniksa + leczenie)")
            wybor = input("Wybierz przedmiot: ").lower()

            receptury = {
                "a": {"nazwa": "rozdzka_ognia", "skladniki": {"krysztal_many": 1, "kula_ognia": 1}},
                "b": {"nazwa": "amulet_cieni", "skladniki": {"esencja_cienia": 1, "lodowy_pocisk": 1}},
                "c": {"nazwa": "pierscien_odrodzenia", "skladniki": {"pyl_feniksa": 1, "leczenie": 1}},
            }

            if wybor in receptury:
                przepis = receptury[wybor]
                if all(s.ekwipunek_z.get(skladnik, 0) >= ilosc for skladnik, ilosc in przepis["skladniki"].items()):
                    for skladnik, ilosc in przepis["skladniki"].items():
                        s.ekwipunek_z[skladnik] -= ilosc
                    s.ekwipunek_z[przepis["nazwa"]] = s.ekwipunek_z.get(przepis["nazwa"], 0) + 1
                    print(f"Stworzyłeś {przepis['nazwa']}!")
                else:
                    print("Brakuje ci składników.")
            else:
                print("Nieprawidłowy wybór.")

        else:
            print("Nie znam takiej opcji.")

class M_oakhaven(M_farglen):
    def __init__(self):
        super().__init__()
        self.nazwa = "Oakhaven"
        self.opis = "Wioska położona niedaleko  wybrzeża ."
        self.populacja = 800
        self.sklepy = ["kowal,czarny_rynek"]
        self.zadania = []


class Location:
    def __init__(self, name, description):
        self.nazwa = name
        self.opis = description
        self.enemies = []
    def wejscie(self, player):
        print(f"{player.name} wchodzi do {self.name}. {self.description}")
    
    def spawn_enemy(self, player):
        if self.enemies:
            enemy = random.choice(self.enemies)
            print(f"Pojawia się {enemy.imie}!")
            enemy.walka(s)

class Norheim(Location):
    def __init__(self):
        super().__init__("Norheim", "Starożytne ruiny pełne duchów przeszłości.")
        self.enemies = [Spectralny_rycerz(), Zagubiony_cien()]


class Lirien(Location):
    def __init__(self):
        super().__init__("Lirien", "Zielone, mistyczne lasy pełne magii i pradawnych sekretów.")
        self.enemies = [Elficki_Lucznik(), Duch_Starego_Drzewa()]

class Thaldras(Location):
    def __init__(self):
        super().__init__("Thaldras", "Kamienne wzgórza i jaskinie zamieszkane przez twardych wojowników.")
        self.enemies = [Krasnoludzki_Wojownik(), Kamienny_Golem()]


class Varnak(Location):
    def __init__(self):
        super().__init__("Varnak", "Pustynne ruiny i spalone ziemie, pełne zdradliwych potworów.")
        self.enemies = [Pustynny_Skorpion(), Ognisty_Szamanka()]

class Dunhollow(Location):
    def __init__(self):
        super().__init__("Dunhollow", "Mroczne podziemia pełne cieni, upiorów i zagadek.")
        self.enemies = [Cienisty_Zabojca(), Upiorny_Lowiec()]

    
class Enemy:
    def __init__(self):
        self.hp = 40
        self.atak = 5
        self.zyje = True
        self.imie = "Nieznany wróg"
        self.s_p = ""
    def odejmij_hp(self, a):
        self.hp -= a
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False
            print(f"{self.imie} zginął!")

    def czy_zyje(self):
        return self.zyje

    def atak_s(self, target):
        damage = random.randint(self.atak, self.atak+5)
        print(f"{self.imie} atakuje! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)
    
    def loot(self,zloto):
        loot_przedmioty = {"złoto": 100, self.s_p:0}
        zloto = 100
        return loot_przedmioty, zloto


class Goblin(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 60
        self.atak = 8
        self.imie = "Goblin"
        self.s_p = "nerka_goblina"
    def specjalny_atak(self, target):
        damage1 = random.randint(3, 6)
        damage2 = random.randint(3, 6)
        print(f"{self.imie} wykonuje szybki podwójny atak! {damage1} + {damage2} obrażeń!")

class Demon(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 100
        self.atak = 15
        self.imie = "Demon"
        self.s_p = "gniewnica"
    def specjalny_atak(self, target):
        damage = random.randint(10, 20)
        print(f"{self.imie} wykonuje potężny atak! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)

class Spectralny_rycerz(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 75
        self.atak = 20
        self.imie = "Spectralny_rycerz"
        self.s_p = "kroplomiecz"

class Zagubiony_cien(Enemy):
    def __init__(self):
        super().__init__()
        self.hp=80
        self.atak=15
        self.imie = "Zagubiony Cień"
        self.s_p = "esencja_cienia"
class Elficki_Lucznik(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 60
        self.atak = 18
        self.imie = "Elficki Łucznik"
        self.s_p = "srebrolisc"

class Duch_Starego_Drzewa(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 80
        self.atak = 15
        self.imie = "Duch Starego Drzewa"
        self.s_p = "jasnorost"

class Krasnoludzki_Wojownik(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 100
        self.atak = 22
        self.imie = "Krasnoludzki Wojownik"
        self.s_p = "stal"

class Kamienny_Golem(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 120
        self.atak = 16
        self.imie = "Kamienny Golem"
        self.s_p = "zalazo"

class Pustynny_Skorpion(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 70
        self.atak = 25
        self.imie = "Pustynny Skorpion"
        self.s_p = "jad_skrystalizowany"

class Ognisty_Szamanka(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 65
        self.atak = 30
        self.imie = "Ognisty Szamanka"
        self.s_p = "kosc_wrozki"

class Cienisty_Zabojca(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 85
        self.atak = 27
        self.imie = "Cienisty Zabójca"
        self.s_p = "pyl_duszy"

class Upiorny_Lowiec(Enemy):
    def __init__(self):
        super().__init__()
        self.hp = 90
        self.atak = 23
        self.imie = "Upiorny Łowiec"
        self.s_p = "ciernolisc"

du = Dunhollow()
va = Varnak()
th = Thaldras()
li = Lirien()
no = Norheim()
me = M_eldenhof() 
fa = M_farglen()
s = Sigma()
kk = random.choice([Goblin(), Demon()])
pp = random.choice([Elficki_Lucznik(), Duch_Starego_Drzewa()])
mm = random.choice([Krasnoludzki_Wojownik(),Kamienny_Golem()])
jj = random.choice([Pustynny_Skorpion(), Ognisty_Szamanka()])
nn = random.choice([Cienisty_Zabojca(), Upiorny_Lowiec()])
dd = random.choice([Spectralny_rycerz(),Zagubiony_cien])
def walka(akcja,pok,kok):
    if s.lokacja.nazwa == "Eldenhof":
        pok = random.choice([Goblin(), Demon()])
    elif s.lokacja.nazwa == "Farglen":
        pok = random.choice([Goblin(), Demon()])
    elif s.lokacja.nazwa == "Norheim":
        pok = random.choice([Spectralny_rycerz(), Zagubiony_cien()])
    elif s.lokacja.nazwa == "Lirien":
        pok = random.choice([Elficki_Lucznik(), Duch_Starego_Drzewa()])
    elif s.lokacja.nazwa == "Thaldras":
        pok = random.choice([Krasnoludzki_Wojownik(), Kamienny_Golem()])
    elif s.lokacja.nazwa == "Varnak":
        pok = random.choice([Pustynny_Skorpion(), Ognisty_Szamanka()])
    elif s.lokacja.nazwa == "Dunhollow":
        pok = random.choice([Cienisty_Zabojca(), Upiorny_Lowiec()])
    else:
        print("Nieznana lokacja, nie można rozpocząć walki.")
        return

    print(f"\n{pok.imie} pojawił się! Ma {pok.hp} HP i {pok.atak} ataku.")
    while pok.czy_zyje() and s.czy_zyje():
        akcja = input("Wybierz akcję: (1) atak zwykły, (2) atak specjalny, (3) użycie potek, (4) zjedzenie grzybka: ")
        if akcja == "1":
            s.atak_s(pok)
        elif akcja == "2":
            s.specjalny_atak(pok)
        elif akcja == "3":
            s.uzywanie_potek()
        elif akcja == "4":
            s.podejrzliwe(pol=random)
        else:
            print("Nieprawidłowa akcja!")

        if pok.czy_zyje():
            if isinstance(pok, (Goblin, Demon)):
                if random.choice([1, 2]) == 1:
                    pok.atak_s(s)
                else:
                    pok.specjalny_atak(s)
            else:
                pok.atak_s(s)
        else:
            loot_przedmioty, zloto = pok.loot(zloto=100)
            s.zbierz_loot(loot_przedmioty, zloto)

    if s.czy_zyje():
        print(f"{s.imie} wygrał walkę!")
        s.zdobycie_doswiadczenia(20)
    

def mapa():
        print("        1         10        20        30        40        50")
        print("         |---------|---------|---------|---------|---------|")
        print("         A   ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲")
        print("         B ▲      Góry Północy      ▲      ▲  * Norheim   ▲")
        print("         C ▲   * Thaldras        ▲ ▲       ▲             ▲")
        print("         D ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ ♣♣   ♣♣♣♣")
        print("         E ▲   ♣♣   * Eldenhof     ▲   ♣♣♣♣        ♣♣♣♣")
        print("         F ▲   ♣♣♣♣ (Stolica)      ▲   ♣  * Lirien    ♣♣")
        print("         G ▲ ♣♣♣        ♣♣♣♣       ▲     ♣♣♣♣        ♣♣")
        print("         H ▲ ♣  * Narthwood        ▲     ♣♣     ♣♣")
        print("         I ▲   ♣♣  (osada)         ▲  * Dunhollow   ♣♣♣")
        print("         J ▲     ♣♣♣♣             ▲▲   ♣♣♣♣      ♣♣♣")
        print("         K ▲                     ▲       ♣♣♣♣    ♣♣")
        print("         L ▲     * Brumhill      ▲       ♣   * Oakhaven")
        print("         M ▲     (leśne wzg.)    ▲      ♣♣♣♣    (wioska)")
        print("         N ▲                     ▲  ♣♣♣♣       ♣♣♣♣")
        print("         O ▲         * Varnak    ▲       ♣♣♣♣♣♣♣♣")
        print("         P ▲ * Dorun             ▲   ♣♣    ♣♣♣  ♣")
        print("         Q ▲ (handlowe)          ▲  ♣♣♣♣♣      ♣♣♣")
        print("         R ▲    ♣♣               ▲       * Farglen")
        print("         S ▲   ♣♣♣             * Griz     (miasto)")
        print("         T ▲   ♣♣               (kras.)     ♣♣♣♣♣♣♣")
        print("         U ▲                     ▲     ♣♣♣♣♣♣♣♣♣")
        print("         V ▲         * Sahra     ▲         ♣♣♣♣♣♣♣")
        print("         W ▲                     ▲")
        print("         X ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲")
while s.czy_zyje():
    print("\nWybierz opcję: pokaż statystyki - a, pokaż ekwipunek potek - b, zobacz swoje obecne położenie - c, pokaż mape i zaplanuj podróż - d, x -  zawalcz z mobkami, q - wyjście z gry, r - zobacz lokalne sklepy")
    wybor = input(">> ").lower()
    if wybor == "a":
        print(s.staty())
    elif wybor == "b":
        print(s.ekwipunek_p)
    elif wybor == "c":
        print(s.lokacja_p())
    elif wybor == "d":
        print(mapa())
    
    elif wybor == "x":
        print(walka(akcja=input(),kok=random,pok=any))
        
    elif wybor == "q":
        print("Koniec gry.")
        break

