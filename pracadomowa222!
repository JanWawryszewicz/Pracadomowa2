import random

class Sigma:
    def __init__(self):
        self.hp = 100
        self.atak = 10
        self.zyje = True
        self.level = 1
        self.mana = 30
        self.punkty_do_zdobycia = 10
        self.ekwipunek = []
        self.experience = 0
        self.max_hp = 100
        self.defense = 0

    def odejmij_hp(self, a):
      
        damage = a - self.defense
        if damage < 0: damage = 0
        self.hp -= damage
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False  

    def czy_zyje(self):
       
        return self.zyje

    def basic_atak(self):
        
        return self.atak

    def levelowanie(self, lzg):
        
        self.experience += lzg
        if self.experience >= self.punkty_do_zdobycia:
            self.level += 1
            self.punkty_do_zdobycia += 10
            self.atak += 2
            self.hp = self.max_hp
            print(f"Sigma awansowała na poziom {self.level}!")
            self.experience = 0

    def specjalny_atak(self, target):
       
        if self.mana >= 10:
            self.mana -= 10
            damage = random.randint(20, 30)
            print(f"Sigma wykonuje specjalny atak! Zadaje {damage} obrażeń.")
            target.odejmij_hp(damage)
        else:
            print("Brak wystarczającej ilości many do specjalnego ataku.")

    def uzyj_przedmiot(self):
        
        if self.ekwipunek:
            przedmiot = self.ekwipunek.pop()
            print(f"Sigma używa {przedmiot}")
            if przedmiot == "Mikstura HP":
                self.hp += 20
                print(f"Sigma zyskała 20 HP. Aktualne HP: {self.hp}.")
            elif przedmiot == "Mikstura Many":
                self.mana += 15
                print(f"Sigma zyskała 15 many. Aktualna mana: {self.mana}.")
            elif przedmiot == "Zbroja":
                self.max_hp += 30
                self.hp = self.max_hp
                self.defense += 5
                print("Sigma zdobyła Zbroję, zwiększając maksymalne HP o 30 i obronę o 5.")
            elif przedmiot == "Mikstura Mocy":
                self.atak += 5
                print(f"Sigma zyskała 5 punktów ataku. Nowy atak: {self.atak}.")
            elif przedmiot == "Mikstura Szybkości":
                self.atak += 3
                self.defense += 2
                print(f"Sigma zyskała 3 punkty ataku oraz 2 punkty obrony. Nowy atak: {self.atak}, obrona: {self.defense}.")
        else:
            print("Sigma nie ma żadnych przedmiotów w ekwipunku.")


class Goblin:
    def __init__(self):
        self.hp = 20
        self.atak = 2
        self.zyje = True
        self.mana = 0
        self.defense = 1

    def odejmij_hp(self, a):
        
        damage = a - self.defense
        if damage < 0: damage = 0
        self.hp -= damage
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False  

    def czy_zyje(self):
       
        return self.zyje

    def basic_atak(self):
       
        return self.atak

    def specjalny_atak(self, target):
        
        damage = random.randint(5, 10)
        print(f"Goblin wykonuje specjalny atak! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)


class Orc:
    def __init__(self):
        self.hp = 50
        self.atak = 8
        self.zyje = True
        self.mana = 0
        self.defense = 3

    def odejmij_hp(self, a):
        
        damage = a - self.defense
        if damage < 0: damage = 0
        self.hp -= damage
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False

    def czy_zyje(self):
       
        return self.zyje

    def basic_atak(self):
        
        return self.atak

    def specjalny_atak(self, target):
       
        damage = random.randint(10, 20)
        print(f"Ork wykonuje brutalny atak! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)


class Dragon:
    def __init__(self):
        self.hp = 150
        self.atak = 25
        self.zyje = True
        self.mana = 50
        self.defense = 10

    def odejmij_hp(self, a):
       
        damage = a - self.defense
        if damage < 0: damage = 0
        self.hp -= damage
        if self.hp <= 0:
            self.hp = 0
            self.zyje = False

    def czy_zyje(self):
       
        return self.zyje

    def basic_atak(self):
    
        return self.atak

    def specjalny_atak(self, target):
        
        damage = random.randint(30, 40)
        print(f"Smok wykonuje ognisty atak! Zadaje {damage} obrażeń.")
        target.odejmij_hp(damage)


def walka(postac1, postac2):

    lzg = 0
    while postac1.czy_zyje() and postac2.czy_zyje():
        print("\nWalka się toczy...")

        if random.choice([True, False]):
            postac1.odejmij_hp(postac2.basic_atak())
        else:
            postac1.specjalny_atak(postac2)

        if postac2.czy_zyje():
            if random.choice([True, False]):
                postac2.odejmij_hp(postac1.basic_atak())
            else:
                postac2.specjalny_atak(postac1)

        if random.choice([True, False]):
            postac1.uzyj_przedmiot()

        if not postac1.czy_zyje():
            print(f"{postac1.__class__.__name__} zginął!")
            break

        if not postac2.czy_zyje():
            print(f"{postac2.__class__.__name__} zginął!")
            lzg += 1
            postac1.levelowanie(lzg)
            break

    return lzg



sigma = Sigma()
goblin = Goblin()
orc = Orc()
dragon = Dragon()


sigma.ekwipunek.append("Mikstura HP")
sigma.ekwipunek.append("Mikstura Many")
sigma.ekwipunek.append("Zbroja")
sigma.ekwipunek.append("Mikstura Mocy")
sigma.ekwipunek.append("Mikstura Szybkości")

lzg = walka(sigma, goblin)
print(f"Sigma pokonała {lzg} goblinów!")


lzg = walka(sigma, orc)
print(f"Sigma pokonała {lzg} orków!")

lzg = walka(sigma, dragon)
print(f"Sigma pokonała {lzg} smoków!")
